// Code generated by protoc-gen-go. DO NOT EDIT.
// source: icart/pkg/grpc/pb/icart.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SignInRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignInRequest) Reset()         { *m = SignInRequest{} }
func (m *SignInRequest) String() string { return proto.CompactTextString(m) }
func (*SignInRequest) ProtoMessage()    {}
func (*SignInRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe90e65e6f513851, []int{0}
}

func (m *SignInRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignInRequest.Unmarshal(m, b)
}
func (m *SignInRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignInRequest.Marshal(b, m, deterministic)
}
func (m *SignInRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignInRequest.Merge(m, src)
}
func (m *SignInRequest) XXX_Size() int {
	return xxx_messageInfo_SignInRequest.Size(m)
}
func (m *SignInRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignInRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignInRequest proto.InternalMessageInfo

type SignInReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignInReply) Reset()         { *m = SignInReply{} }
func (m *SignInReply) String() string { return proto.CompactTextString(m) }
func (*SignInReply) ProtoMessage()    {}
func (*SignInReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe90e65e6f513851, []int{1}
}

func (m *SignInReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignInReply.Unmarshal(m, b)
}
func (m *SignInReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignInReply.Marshal(b, m, deterministic)
}
func (m *SignInReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignInReply.Merge(m, src)
}
func (m *SignInReply) XXX_Size() int {
	return xxx_messageInfo_SignInReply.Size(m)
}
func (m *SignInReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SignInReply.DiscardUnknown(m)
}

var xxx_messageInfo_SignInReply proto.InternalMessageInfo

func init() {
	proto.RegisterType((*SignInRequest)(nil), "pb.SignInRequest")
	proto.RegisterType((*SignInReply)(nil), "pb.SignInReply")
}

func init() {
	proto.RegisterFile("icart/pkg/grpc/pb/icart.proto", fileDescriptor_fe90e65e6f513851)
}

var fileDescriptor_fe90e65e6f513851 = []byte{
	// 115 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0xcd, 0x4c, 0x4e, 0x2c,
	0x2a, 0xd1, 0x2f, 0xc8, 0x4e, 0xd7, 0x4f, 0x2f, 0x2a, 0x48, 0xd6, 0x2f, 0x48, 0xd2, 0x07, 0x8b,
	0xe8, 0x15, 0x14, 0xe5, 0x97, 0xe4, 0x0b, 0x31, 0x15, 0x24, 0x29, 0xf1, 0x73, 0xf1, 0x06, 0x67,
	0xa6, 0xe7, 0x79, 0xe6, 0x05, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x28, 0xf1, 0x72, 0x71, 0xc3,
	0x04, 0x0a, 0x72, 0x2a, 0x8d, 0x4c, 0xb9, 0x58, 0x3d, 0x41, 0x5a, 0x84, 0x74, 0xb8, 0xd8, 0x20,
	0xe2, 0x42, 0x82, 0x7a, 0x05, 0x49, 0x7a, 0x28, 0x9a, 0xa4, 0xf8, 0x91, 0x85, 0x0a, 0x72, 0x2a,
	0x93, 0xd8, 0xc0, 0x36, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x3e, 0x0c, 0xc3, 0x7a, 0x82,
	0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IcartClient is the client API for Icart service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IcartClient interface {
	SignIn(ctx context.Context, in *SignInRequest, opts ...grpc.CallOption) (*SignInReply, error)
}

type icartClient struct {
	cc grpc.ClientConnInterface
}

func NewIcartClient(cc grpc.ClientConnInterface) IcartClient {
	return &icartClient{cc}
}

func (c *icartClient) SignIn(ctx context.Context, in *SignInRequest, opts ...grpc.CallOption) (*SignInReply, error) {
	out := new(SignInReply)
	err := c.cc.Invoke(ctx, "/pb.Icart/SignIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IcartServer is the server API for Icart service.
type IcartServer interface {
	SignIn(context.Context, *SignInRequest) (*SignInReply, error)
}

// UnimplementedIcartServer can be embedded to have forward compatible implementations.
type UnimplementedIcartServer struct {
}

func (*UnimplementedIcartServer) SignIn(ctx context.Context, req *SignInRequest) (*SignInReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignIn not implemented")
}

func RegisterIcartServer(s *grpc.Server, srv IcartServer) {
	s.RegisterService(&_Icart_serviceDesc, srv)
}

func _Icart_SignIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IcartServer).SignIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Icart/SignIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IcartServer).SignIn(ctx, req.(*SignInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Icart_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Icart",
	HandlerType: (*IcartServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SignIn",
			Handler:    _Icart_SignIn_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "icart/pkg/grpc/pb/icart.proto",
}
